<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<TrustFrameworkPolicy
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:xsd="http://www.w3.org/2001/XMLSchema"
  xmlns="http://schemas.microsoft.com/online/cpim/schemas/2013/06"
  PolicySchemaVersion="0.3.0.0"
  TenantId="contosob2c5.onmicrosoft.com"
  PolicyId="B2C_1A_ANZ_COMMONEMAIL_UPDATE"
  PublicPolicyUri="http://contosob2c5.onmicrosoft.com/B2C_1A_ANZ_COMMONEMAIL_UPDATE">

  <BasePolicy>
    <TenantId>contosob2c5.onmicrosoft.com</TenantId>
    <PolicyId>B2C_1A_ANZ_TrustFrameworkExtensions</PolicyId>
  </BasePolicy>

<BuildingBlocks>
    <ClaimsSchema>
      <ClaimType Id="oldEmailAddress"><!--oldEmailAddress (Done) -->
        <DisplayName>Old Email Address</DisplayName>
        <DataType>string</DataType>
        <UserHelpText>Email address to use for signing in.</UserHelpText>
        <UserInputType>TextBox</UserInputType>
      </ClaimType>
      <ClaimType Id="newEmailAddress">
        <DisplayName>New Email Address</DisplayName>
        <DataType>string</DataType>
        <UserHelpText>Email address to use for signing in.</UserHelpText>
        <UserInputType>TextBox</UserInputType>
      </ClaimType>

      <ClaimType Id="accountEnabled">
        <DisplayName>New Email Presented</DisplayName>
        <DataType>boolean</DataType>
      </ClaimType>

      <ClaimType Id="ComparisonResult">
        <DisplayName>New Email Presented</DisplayName>
        <DataType>boolean</DataType>
      </ClaimType>

      <ClaimType Id="confirmation">
        <DisplayName>Confirmation</DisplayName>
        <DataType>string</DataType>
        <UserInputType>RadioSingleSelect</UserInputType>
        <Restriction>
          <Enumeration Text="Yes" Value="Yes" SelectByDefault="false" />
          <Enumeration Text="No " Value="No" SelectByDefault="false" />
        </Restriction>
      </ClaimType>

    </ClaimsSchema>

    <ClaimsTransformations>
        <ClaimsTransformation Id="CopyOldEmailAddress" TransformationMethod="CopyClaim">
            <InputClaims>
                <InputClaim ClaimTypeReferenceId="oldEmailAddress" TransformationClaimType="inputClaim"/>
            </InputClaims>
            <OutputClaims>
                <OutputClaim ClaimTypeReferenceId="email" TransformationClaimType="outputClaim"/>
            </OutputClaims>
        </ClaimsTransformation>

        <ClaimsTransformation Id="CopyEmailFromNewEmailAddress" TransformationMethod="CopyClaim">
            <InputClaims>
                <InputClaim ClaimTypeReferenceId="newEmailAddress" TransformationClaimType="inputClaim"/>
            </InputClaims>
            <OutputClaims>
                <OutputClaim ClaimTypeReferenceId="email" TransformationClaimType="outputClaim"/>
            </OutputClaims>
        </ClaimsTransformation>

  <ClaimsTransformation Id="AssertEmailAreEqual" TransformationMethod="AssertStringClaimsAreEqual">
    <InputClaims>
      <InputClaim ClaimTypeReferenceId="newEmailAddress" TransformationClaimType="inputClaim1" />
      <InputClaim ClaimTypeReferenceId="email" TransformationClaimType="inputClaim2" />
    </InputClaims>
    <InputParameters>
      <InputParameter Id="stringComparison" DataType="string" Value="ordinalIgnoreCase" />
    </InputParameters>
  </ClaimsTransformation>

<ClaimsTransformation Id="CheckIfEmailPresent" TransformationMethod="DoesClaimExist">
  <InputClaims>
    <InputClaim ClaimTypeReferenceId="signInNames.emailAddress" TransformationClaimType="inputClaim" />
  </InputClaims>
  <OutputClaims>
    <OutputClaim ClaimTypeReferenceId="accountEnabled" TransformationClaimType="outputClaim" />
  </OutputClaims>
</ClaimsTransformation>

<ClaimsTransformation Id="AssertAccountEnabledIsTrue" TransformationMethod="AssertBooleanClaimIsEqualToValue">
  <InputClaims>
    <InputClaim ClaimTypeReferenceId="accountEnabled" TransformationClaimType="inputClaim" />
  </InputClaims>
  <InputParameters>
    <InputParameter Id="valueToCompareTo" DataType="boolean" Value="false" />
  </InputParameters>
</ClaimsTransformation>

    </ClaimsTransformations>

</BuildingBlocks>

<ClaimsProviders>
    <ClaimsProvider>
      <!-- The following Domain element allows this profile to be used if the request comes with domain_hint 
           query string parameter, e.g. domain_hint=facebook.com  -->
      <DisplayName>Email Address Update</DisplayName>
      <TechnicalProfiles>

        <TechnicalProfile Id="AdminEditEmailAddress"> <!--rename to AdminEditEmailAddress (Done) -->
          <DisplayName>Email Update</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.SelfAssertedAttributeProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <Metadata>
            <Item Key="ContentDefinitionReferenceId">api.selfasserted.admineditemailaddress</Item><!--should match tech profile naming / functionality (Done) -->
            <Item Key="UserMessageIfClaimsTransformationBooleanValueIsNotEqual">The new email provided is exist.</Item>
          </Metadata>
          <IncludeInSso>false</IncludeInSso>
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="oldEmailAddress" Required="true"/> <!-- Required attribute should be used (Done) -->
            <OutputClaim ClaimTypeReferenceId="newEmailAddress" Required="true"/><!-- Required attribute should be used (Done) -->
            <OutputClaim ClaimTypeReferenceId="objectId" />
          </OutputClaims>
          <ValidationTechnicalProfiles>
            <ValidationTechnicalProfile ReferenceId="AAD_OldEmailAddressReadOnly" />
            <ValidationTechnicalProfile ReferenceId="AAD_NewEmailAddressReadOnly" />
            <ValidationTechnicalProfile ReferenceId="Validate_Email" />
          </ValidationTechnicalProfiles>
            <UseTechnicalProfileForSessionManagement ReferenceId="SM-Noop" /> <!-- use SM-Noop-->
        </TechnicalProfile>

        <TechnicalProfile Id="AAD_WriteEmaillAddress">
          <Metadata>
            <Item Key="Operation">Write</Item>
            <Item Key="RaiseErrorIfClaimsPrincipalAlreadyExists">false</Item><!-- reverse the true/false (Done) -->
            <Item Key="RaiseErrorIfClaimsPrincipalDoesNotExist">true</Item>
          </Metadata>
          <IncludeInSso>false</IncludeInSso>
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="objectId" Required="true" />
          </InputClaims>
            <PersistedClaims>
                <PersistedClaim ClaimTypeReferenceId="objectId" />
                <PersistedClaim ClaimTypeReferenceId="newEmailAddress" PartnerClaimType="signInNames.emailAddress" /><!--new email claim could be used (Done) -->
            </PersistedClaims>
          <IncludeTechnicalProfile ReferenceId="AAD-Common" />
        </TechnicalProfile>

        <TechnicalProfile Id="AAD_OldEmailAddressReadOnly">
          <Metadata>
            <Item Key="Operation">Read</Item>
            <Item Key="RaiseErrorIfClaimsPrincipalDoesNotExist">true</Item>
          </Metadata>
          <IncludeInSso>false</IncludeInSso>
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="oldEmailAddress" PartnerClaimType="signInNames.emailAddress" Required="true" />
          </InputClaims>
          <OutputClaims>
            <!-- Required claims -->
            <OutputClaim ClaimTypeReferenceId="objectId" />
            <OutputClaim ClaimTypeReferenceId="authenticationSource" DefaultValue="localAccountAuthentication" />

          </OutputClaims>
          <IncludeTechnicalProfile ReferenceId="AAD-Common" />
        </TechnicalProfile>

  <TechnicalProfile Id="AAD_NewEmailAddressReadOnly">
    <Metadata>
      <Item Key="Operation">Read</Item>
      <Item Key="RaiseErrorIfClaimsPrincipalDoesNotExist">false</Item>
    </Metadata>
    <IncludeInSso>false</IncludeInSso>
      <InputClaimsTransformations>
          <InputClaimsTransformation ReferenceId="CopyEmailFromNewEmailAddress" />
      </InputClaimsTransformations>
    <InputClaims>
      <InputClaim ClaimTypeReferenceId="newEmailAddress" PartnerClaimType="signInNames.emailAddress" Required="true" />
    </InputClaims>
    <OutputClaims>
      <!-- Required claims -->
      <OutputClaim ClaimTypeReferenceId="objectId" />
      <OutputClaim ClaimTypeReferenceId="signInNames.emailAddress" Required="true" />
    </OutputClaims>
    <IncludeTechnicalProfile ReferenceId="AAD-Common" />
  </TechnicalProfile>

<TechnicalProfile Id="Validate_Email">
  <DisplayName>Unlink Facebook</DisplayName>
  <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.ClaimsTransformationProtocolProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
  <InputClaims>
    <InputClaim ClaimTypeReferenceId="signInNames.emailAddress" />
  </InputClaims>
  <OutputClaims>
    <OutputClaim ClaimTypeReferenceId="accountEnabled" DefaultValue="false"/>
  </OutputClaims>
  <OutputClaimsTransformations>
    <OutputClaimsTransformation ReferenceId="CheckIfEmailPresent" />
    <OutputClaimsTransformation ReferenceId="AssertAccountEnabledIsTrue" />
  </OutputClaimsTransformations>
  <UseTechnicalProfileForSessionManagement ReferenceId="SM-Noop" />
</TechnicalProfile>

        <TechnicalProfile Id="AAD-UserReadUsingObjectId">
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="objectId" />
          </OutputClaims>
        </TechnicalProfile>

        <TechnicalProfile Id="UpdateConfirmation">
          <DisplayName>Email signup</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.SelfAssertedAttributeProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <Metadata>
            <Item Key="ContentDefinitionReferenceId">api.usersignup</Item>
            <Item Key="setting.showCancelButton">false</Item>
          </Metadata>
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="confirmation" />
          </OutputClaims>
        </TechnicalProfile>

      </TechnicalProfiles>

    </ClaimsProvider>
</ClaimsProviders>

<UserJourneys>
    <UserJourney Id="AdminChangeEmailAddress"> <!-- Rename AdminChangeEmailAddress (Done) -->
        <OrchestrationSteps>
            <OrchestrationStep Order="1" Type="ClaimsExchange">
              <ClaimsExchanges>
                  <ClaimsExchange Id="LocalAccountProfileUpdateExchange" TechnicalProfileReferenceId="AdminEditEmailAddress" />
              </ClaimsExchanges>
            </OrchestrationStep>
            <OrchestrationStep Order="2" Type="InvokeSubJourney">
              <JourneyList>
                <Candidate SubJourneyReferenceId="UpdateConfirmation_Evaluation" />
              </JourneyList>
            </OrchestrationStep>
            <OrchestrationStep Order="3" Type="SendClaims" CpimIssuerTechnicalProfileReferenceId="JwtIssuer" />
        </OrchestrationSteps>
        <ClientDefinition ReferenceId="DefaultWeb" />
    </UserJourney>
</UserJourneys>

<SubJourneys>
  <SubJourney Id="UpdateConfirmation_Evaluation" Type="Call">
    <OrchestrationSteps>
      <OrchestrationStep Order="1" Type="ClaimsExchange">
       <ClaimsExchanges>
        <ClaimsExchange Id="UpdateConfirmationEvaluation" TechnicalProfileReferenceId="UpdateConfirmation" />
       </ClaimsExchanges>
      </OrchestrationStep>
      <OrchestrationStep Order="2" Type="ClaimsExchange">
        <Preconditions>
        <Precondition Type="ClaimEquals" ExecuteActionsIf="true">
          <Value>confirmation</Value>
          <Value>No</Value>
          <Action>SkipThisOrchestrationStep</Action>
        </Precondition>
        </Preconditions>
        <ClaimsExchanges>
            <ClaimsExchange Id="AAD_UserWriteUsingLogonEmailEvaluation" TechnicalProfileReferenceId="AAD_WriteEmaillAddress" />
        </ClaimsExchanges>
      </OrchestrationStep>
    </OrchestrationSteps>
  </SubJourney>
</SubJourneys>

  <RelyingParty>
    <DefaultUserJourney ReferenceId="AdminChangeEmailAddress" /><!-- update the naming (Done) -->
    <UserJourneyBehaviors>
      <ScriptExecution>Allow</ScriptExecution>
    </UserJourneyBehaviors>
    <TechnicalProfile Id="AdminChangeEmailAddress"><!-- allow javascript always (Done) -->
      <DisplayName>PolicyProfile</DisplayName>
      <Protocol Name="OpenIdConnect" />
      <OutputClaims>
        <OutputClaim ClaimTypeReferenceId="objectId" PartnerClaimType="sub"/>
        <OutputClaim ClaimTypeReferenceId="tenantId" AlwaysUseDefaultValue="true" DefaultValue="{Policy:TenantObjectId}" />
		<!-- include old and new email claims-->
        <OutputClaim ClaimTypeReferenceId="oldEmailAddress" />
        <OutputClaim ClaimTypeReferenceId="newEmailAddress" />
		<!-- include tfp-->
        <OutputClaim ClaimTypeReferenceId="trustFrameworkPolicy" PartnerClaimType="tfp" Required="true" DefaultValue="{policy}" />
      </OutputClaims>
      <SubjectNamingInfo ClaimType="sub" />
    </TechnicalProfile>
  </RelyingParty>
</TrustFrameworkPolicy>